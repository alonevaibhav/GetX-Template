import 'package:flutter/material.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:glassmorphism/glassmorphism.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:gap/gap.dart';
import 'package:get/get.dart';
import 'package:phosphor_flutter/phosphor_flutter.dart';
import 'package:shimmer/shimmer.dart';
import 'package:card_swiper/card_swiper.dart';
import 'package:lottie/lottie.dart';
import 'package:lucide_icons/lucide_icons.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';

// Models
class UserModel {
  final String id;
  final String name;
  final String email;
  final String avatar;
  final bool isOnline;
  final String lastSeen;

  UserModel({
    required this.id,
    required this.name,
    required this.email,
    required this.avatar,
    required this.isOnline,
    required this.lastSeen,
  });

  factory UserModel.fromJson(Map<String, dynamic> json) {
    return UserModel(
      id: json['id'],
      name: json['name'],
      email: json['email'],
      avatar: json['avatar'],
      isOnline: json['isOnline'],
      lastSeen: json['lastSeen'],
    );
  }
}

class ProductModel {
  final String id;
  final String name;
  final String image;
  final double price;
  final double rating;
  final String category;
  final bool isFavorite;

  ProductModel({
    required this.id,
    required this.name,
    required this.image,
    required this.price,
    required this.rating,
    required this.category,
    required this.isFavorite,
  });
}

// Controllers
class DashboardController extends GetxController {
  var isLoading = false.obs;
  var selectedIndex = 0.obs;
  var user = Rx<UserModel?>(null);
  var notifications = 3.obs;

  @override
  void onInit() {
    super.onInit();
    loadUserData();
  }

  void loadUserData() {
    isLoading.value = true;
    Future.delayed(Duration(seconds: 2), () {
      user.value = UserModel(
        id: '1',
        name: 'John Doe',
        email: 'john@example.com',
        avatar: 'https://avatar.iran.liara.run/public/42',
        isOnline: true,
        lastSeen: 'Just now',
      );
      isLoading.value = false;
    });
  }

  void changeTab(int index) {
    selectedIndex.value = index;
  }
}

class ProductsController extends GetxController {
  var isLoading = false.obs;
  var products = <ProductModel>[].obs;
  var currentPage = 0.obs;

  @override
  void onInit() {
    super.onInit();
    loadProducts();
  }

  void loadProducts() {
    isLoading.value = true;
    Future.delayed(Duration(milliseconds: 1500), () {
      products.value = [
        ProductModel(
          id: '1',
          name: 'iPhone 15 Pro',
          image: 'https://picsum.photos/200/200?random=1',
          price: 999.99,
          rating: 4.8,
          category: 'Electronics',
          isFavorite: false,
        ),
        ProductModel(
          id: '2',
          name: 'MacBook Air M2',
          image: 'https://picsum.photos/200/200?random=2',
          price: 1299.99,
          rating: 4.9,
          category: 'Computers',
          isFavorite: true,
        ),
        ProductModel(
          id: '3',
          name: 'AirPods Pro',
          image: 'https://picsum.photos/200/200?random=3',
          price: 249.99,
          rating: 4.7,
          category: 'Audio',
          isFavorite: false,
        ),
      ];
      isLoading.value = false;
    });
  }

  void toggleFavorite(String productId) {
    final index = products.indexWhere((p) => p.id == productId);
    if (index != -1) {
      final product = products[index];
      products[index] = ProductModel(
        id: product.id,
        name: product.name,
        image: product.image,
        price: product.price,
        rating: product.rating,
        category: product.category,
        isFavorite: !product.isFavorite,
      );
    }
  }
}

class ProfileController extends GetxController {
  var isDarkMode = false.obs;
  var isNotificationEnabled = true.obs;
  var selectedLanguage = 'English'.obs;

  void toggleDarkMode() {
    isDarkMode.value = !isDarkMode.value;
  }

  void toggleNotifications() {
    isNotificationEnabled.value = !isNotificationEnabled.value;
  }

  void changeLanguage(String language) {
    selectedLanguage.value = language;
  }
}

// Views
class DashboardView extends StatelessWidget {
  final DashboardController controller = Get.put(DashboardController());

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFF0A0A0A),
      body: SafeArea(
        child: Obx(() => controller.isLoading.value
            ? _buildShimmerLoading()
            : _buildDashboard(context)),
      ),
    );
  }

  Widget _buildShimmerLoading() {
    return Shimmer.fromColors(
      baseColor: Colors.grey[800]!,
      highlightColor: Colors.grey[700]!,
      child: Column(
        children: [
          Container(
            height: 200,
            margin: EdgeInsets.all(20),
            decoration: BoxDecoration(
              color: Colors.grey[800],
              borderRadius: BorderRadius.circular(20),
            ),
          ),
          ...List.generate(
            3,
                (index) => Container(
              height: 80,
              margin: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
              decoration: BoxDecoration(
                color: Colors.grey[800],
                borderRadius: BorderRadius.circular(15),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildDashboard(BuildContext context) {
    return Column(
      children: [
        _buildGlassHeader()
            .animate()
            .fadeIn(duration: 600.ms)
            .slideY(begin: -0.3, end: 0),
        Gap(20),
        _buildStatsSection()
            .animate()
            .fadeIn(duration: 800.ms, delay: 200.ms)
            .slideX(begin: -0.2, end: 0),
        Gap(30),
        _buildQuickActions()
            .animate()
            .fadeIn(duration: 800.ms, delay: 400.ms)
            .scale(begin: Offset(0.8, 0.8), end: Offset(1.0, 1.0)),
      ],
    );
  }

  Widget _buildGlassHeader() {
    return Container(
      margin: EdgeInsets.all(20),
      child: GlassmorphicContainer(
        width: double.infinity,
        height: 180,
        borderRadius: 25,
        blur: 15,
        alignment: Alignment.bottomCenter,
        border: 2,
        linearGradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Color(0xFF6366f1).withOpacity(0.2),
            Color(0xFF8b5cf6).withOpacity(0.1),
          ],
        ),
        borderGradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Color(0xFF6366f1).withOpacity(0.3),
            Color(0xFF8b5cf6).withOpacity(0.1),
          ],
        ),
        child: Padding(
          padding: EdgeInsets.all(25),
          child: Row(
            children: [
              CircleAvatar(
                radius: 35,
                backgroundImage:
                NetworkImage(controller.user.value?.avatar ?? ''),
              ),
              Gap(20),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Text(
                      'Welcome back,',
                      style: GoogleFonts.inter(
                        color: Colors.white70,
                        fontSize: 14,
                      ),
                    ),
                    Gap(5),
                    Text(
                      controller.user.value?.name ?? '',
                      style: GoogleFonts.inter(
                        color: Colors.white,
                        fontSize: 22,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    Gap(5),
                    Row(
                      children: [
                        Container(
                          width: 8,
                          height: 8,
                          decoration: BoxDecoration(
                            color: Colors.green,
                            shape: BoxShape.circle,
                          ),
                        ),
                        Gap(8),
                        Text(
                          'Online',
                          style: GoogleFonts.inter(
                            color: Colors.green,
                            fontSize: 12,
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              Stack(
                children: [
                  IconButton(
                    onPressed: () {},
                    icon: PhosphorIcon(
                      PhosphorIcons.bell(),
                      color: Colors.white,
                      size: 24,
                    ),
                  ),
                  if (controller.notifications.value > 0)
                    Positioned(
                      right: 8,
                      top: 8,
                      child: Container(
                        padding: EdgeInsets.all(4),
                        decoration: BoxDecoration(
                          color: Colors.red,
                          shape: BoxShape.circle,
                        ),
                        child: Text(
                          '${controller.notifications.value}',
                          style: TextStyle(
                            color: Colors.white,
                            fontSize: 10,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ),
                    ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildStatsSection() {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 20),
      child: Row(
        children: [
          Expanded(
            child: _buildStatCard(
              'Revenue',
              '\$12,450',
              PhosphorIcons.trendUp(),
              Colors.green,
              '+12%',
            ),
          ),
          Gap(15),
          Expanded(
            child: _buildStatCard(
              'Orders',
              '1,234',
              PhosphorIcons.shoppingCart(),
              Colors.blue,
              '+8%',
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildStatCard(
      String title, String value, IconData icon, Color color, String change) {
    return GlassmorphicContainer(
      width: double.infinity,
      height: 120,
      borderRadius: 20,
      blur: 10,
      alignment: Alignment.center,
      border: 1,
      linearGradient: LinearGradient(
        begin: Alignment.topLeft,
        end: Alignment.bottomRight,
        colors: [
          color.withOpacity(0.1),
          color.withOpacity(0.05),
        ],
      ),
      borderGradient: LinearGradient(
        begin: Alignment.topLeft,
        end: Alignment.bottomRight,
        colors: [
          color.withOpacity(0.2),
          color.withOpacity(0.1),
        ],
      ),
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                PhosphorIcon(icon, color: color, size: 24),
                Text(
                  change,
                  style: GoogleFonts.inter(
                    color: Colors.green,
                    fontSize: 12,
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ],
            ),
            Spacer(),
            Text(
              title,
              style: GoogleFonts.inter(
                color: Colors.white70,
                fontSize: 14,
              ),
            ),
            Gap(5),
            Text(
              value,
              style: GoogleFonts.inter(
                color: Colors.white,
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildQuickActions() {
    final actions = [
      {
        'title': 'Analytics',
        'icon': PhosphorIcons.chartLine(),
        'color': Colors.purple
      },
      {
        'title': 'Products',
        'icon': PhosphorIcons.package(),
        'color': Colors.orange
      },
      {
        'title': 'Customers',
        'icon': PhosphorIcons.users(),
        'color': Colors.blue
      },
      {
        'title': 'Settings',
        'icon': PhosphorIcons.gear(),
        'color': Colors.green
      },
    ];

    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 20),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Quick Actions',
            style: GoogleFonts.inter(
              color: Colors.white,
              fontSize: 18,
              fontWeight: FontWeight.bold,
            ),
          ),
          Gap(15),
          GridView.builder(
            shrinkWrap: true,
            physics: NeverScrollableScrollPhysics(),
            gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
              crossAxisCount: 2,
              crossAxisSpacing: 15,
              mainAxisSpacing: 15,
              childAspectRatio: 1.2,
            ),
            itemCount: actions.length,
            itemBuilder: (context, index) {
              final action = actions[index];
              return GestureDetector(
                onTap: () {},
                child: GlassmorphicContainer(
                  width: double.infinity,
                  height: double.infinity,
                  borderRadius: 20,
                  blur: 10,
                  alignment: Alignment.center,
                  border: 1,
                  linearGradient: LinearGradient(
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                    colors: [
                      (action['color'] as Color).withOpacity(0.1),
                      (action['color'] as Color).withOpacity(0.05),
                    ],
                  ),
                  borderGradient: LinearGradient(
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                    colors: [
                      (action['color'] as Color).withOpacity(0.2),
                      (action['color'] as Color).withOpacity(0.1),
                    ],
                  ),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      PhosphorIcon(
                        action['icon'] as IconData,
                        color: action['color'] as Color,
                        size: 32,
                      ),
                      Gap(10),
                      Text(
                        action['title'] as String,
                        style: GoogleFonts.inter(
                          color: Colors.white,
                          fontSize: 14,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ],
                  ),
                ),
              )
                  .animate()
                  .fadeIn(duration: 600.ms, delay: (100 * index).ms)
                  .scale(
                  begin: Offset(0.8, 0.8), end: Offset(1.0, 1.0));
            },
          ),
        ],
      ),
    );
  }
}

class ProductsView extends StatelessWidget {
  final ProductsController controller = Get.put(ProductsController());

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF8FAFC),
      appBar: AppBar(
        backgroundColor: Colors.transparent,
        elevation: 0,
        title: Text(
          'Products',
          style: GoogleFonts.poppins(
            color: Color(0xFF1E293B),
            fontSize: 24,
            fontWeight: FontWeight.bold,
          ),
        ),
        actions: [
          IconButton(
            onPressed: () {},
            icon: Icon(LucideIcons.search, color: Color(0xFF64748B)),
          ),
          IconButton(
            onPressed: () {},
            icon: Icon(LucideIcons.filter, color: Color(0xFF64748B)),
          ),
        ],
      ),
      body: Obx(() => controller.isLoading.value
          ? _buildShimmerLoading()
          : _buildProductsContent()),
    );
  }

  Widget _buildShimmerLoading() {
    return Column(
      children: [
        Container(
          height: 300,
          child: Shimmer.fromColors(
            baseColor: Colors.grey[300]!,
            highlightColor: Colors.grey[100]!,
            child: Container(
              margin: EdgeInsets.all(20),
              decoration: BoxDecoration(
                color: Colors.grey[300],
                borderRadius: BorderRadius.circular(20),
              ),
            ),
          ),
        ),
        Expanded(
          child: Shimmer.fromColors(
            baseColor: Colors.grey[300]!,
            highlightColor: Colors.grey[100]!,
            child: GridView.builder(
              padding: EdgeInsets.all(20),
              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 2,
                crossAxisSpacing: 15,
                mainAxisSpacing: 15,
                childAspectRatio: 0.7,
              ),
              itemCount: 6,
              itemBuilder: (context, index) {
                return Container(
                  decoration: BoxDecoration(
                    color: Colors.grey[300],
                    borderRadius: BorderRadius.circular(15),
                  ),
                );
              },
            ),
          ),
        ),
      ],
    );
  }

  Widget _buildProductsContent() {
    return Column(
      children: [
        Container(
          height: 280,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(horizontal: 20),
                child: Row(
                  children: [
                    Text(
                      'Featured',
                      style: GoogleFonts.poppins(
                        color: Color(0xFF1E293B),
                        fontSize: 18,
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                    Gap(10),
                    Lottie.asset(
                      'assets/star.json',
                      width: 24,
                      height: 24,
                      fit: BoxFit.cover,
                    ),
                  ],
                ),
              ),
              Gap(15),
              Expanded(
                child: Swiper(
                  itemBuilder: (context, index) {
                    final product = controller.products[index];
                    return _buildFeaturedCard(product)
                        .animate()
                        .fadeIn(duration: 600.ms, delay: (100 * index).ms)
                        .slideX(begin: 0.3, end: 0);
                  },
                  itemCount: controller.products.length,
                  viewportFraction: 0.85,
                  scale: 0.9,
                  onIndexChanged: (index) {
                    controller.currentPage.value = index;
                  },
                ),
              ),
            ],
          ),
        ),
        Gap(30),
        Expanded(
          child: Padding(
            padding: EdgeInsets.symmetric(horizontal: 20),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'All Products',
                  style: GoogleFonts.poppins(
                    color: Color(0xFF1E293B),
                    fontSize: 18,
                    fontWeight: FontWeight.w600,
                  ),
                ),
                Gap(15),
                Expanded(
                  child: GridView.builder(
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 2,
                      crossAxisSpacing: 15,
                      mainAxisSpacing: 15,
                      childAspectRatio: 0.75,
                    ),
                    itemCount: controller.products.length,
                    itemBuilder: (context, index) {
                      final product = controller.products[index];
                      return _buildProductCard(product, index);
                    },
                  ),
                ),
              ],
            ),
          ),
        ),
      ],
    );
  }

  Widget _buildFeaturedCard(product) {
    return Container(
      margin: EdgeInsets.symmetric(horizontal: 8),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Color(0xFF6366F1),
            Color(0xFF8B5CF6),
          ],
        ),
        borderRadius: BorderRadius.circular(25),
        boxShadow: [
          BoxShadow(
            color: Color(0xFF6366F1).withOpacity(0.3),
            blurRadius: 20,
            offset: Offset(0, 10),
          ),
        ],
      ),
      child: Stack(
        children: [
          Positioned(
            right: -20,
            top: -20,
            child: Container(
              width: 100,
              height: 100,
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(0.1),
                shape: BoxShape.circle,
              ),
            ),
          ),
          Padding(
            padding: EdgeInsets.all(25),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Container(
                      padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                      decoration: BoxDecoration(
                        color: Colors.white.withOpacity(0.2),
                        borderRadius: BorderRadius.circular(20),
                      ),
                      child: Text(
                        product.category,
                        style: GoogleFonts.poppins(
                          color: Colors.white,
                          fontSize: 12,
                          fontWeight: FontWeight.w500,
                        ),
                      ),
                    ),
                    GestureDetector(
                      onTap: () => controller.toggleFavorite(product.id),
                      child: Icon(
                        product.isFavorite ? LucideIcons.heart : LucideIcons.heart,
                        color: product.isFavorite ? Colors.red : Colors.white,
                        size: 24,
                      ),
                    ),
                  ],
                ),
                Spacer(),
                Text(
                  product.name,
                  style: GoogleFonts.poppins(
                    color: Colors.white,
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                Gap(8),
                Row(
                  children: [
                    Text(
                      '\$${product.price}',
                      style: GoogleFonts.poppins(
                        color: Colors.white,
                        fontSize: 16,
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                    Spacer(),
                    Row(
                      children: [
                        Icon(LucideIcons.star, color: Colors.yellow, size: 16),
                        Gap(4),
                        Text(
                          '${product.rating}',
                          style: GoogleFonts.poppins(
                            color: Colors.white,
                            fontSize: 14,
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildProductCard(product, int index) {
    return GestureDetector(
      onTap: () {},
      child: Container(
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(20),
          boxShadow: [
            BoxShadow(
              color: Color(0xFF1E293B).withOpacity(0.05),
              blurRadius: 10,
              offset: Offset(0, 5),
            ),
          ],
        ),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Expanded(
              flex: 3,
              child: Container(
                decoration: BoxDecoration(
                  borderRadius:
                  BorderRadius.vertical(top: Radius.circular(20)),
                  image: DecorationImage(
                    image: NetworkImage(product.image),
                    fit: BoxFit.cover,
                  ),
                ),
                child: Stack(
                  children: [
                    Positioned(
                      top: 10,
                      right: 10,
                      child: GestureDetector(
                        onTap: () => controller.toggleFavorite(product.id),
                        child: Container(
                          padding: EdgeInsets.all(8),
                          decoration: BoxDecoration(
                            color: Colors.white,
                            shape: BoxShape.circle,
                            boxShadow: [
                              BoxShadow(
                                color: Colors.black.withOpacity(0.1),
                                blurRadius: 5,
                                offset: Offset(0, 2),
                              ),
                            ],
                          ),
                          child: Icon(
                            product.isFavorite
                                ? LucideIcons.heart
                                : LucideIcons.heart,
                            color: product.isFavorite
                                ? Colors.red
                                : Color(0xFF64748B),
                            size: 16,
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Expanded(
              flex: 2,
              child: Padding(
                padding: EdgeInsets.all(15),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      product.name,
                      style: GoogleFonts.poppins(
                        color: Color(0xFF1E293B),
                        fontSize: 14,
                        fontWeight: FontWeight.w600,
                      ),
                      maxLines: 2,
                      overflow: TextOverflow.ellipsis,
                    ),
                    Gap(8),
                    Row(
                      children: [
                        Icon(LucideIcons.star, color: Colors.amber, size: 14),
                        Gap(4),
                        Text(
                          '${product.rating}',
                          style: GoogleFonts.poppins(
                            color: Color(0xFF64748B),
                            fontSize: 12,
                          ),
                        ),
                      ],
                    ),
                    Spacer(),
                    Text(
                      '\$${product.price}',
                      style: GoogleFonts.poppins(
                        color: Color(0xFF6366F1),
                        fontSize: 16,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    )
        .animate()
        .fadeIn(duration: 600.ms, delay: (50 * index).ms)
        .slideY(begin: 0.3, end: 0);
  }
}

class ProfileView extends StatelessWidget {
  final ProfileController controller = Get.put(ProfileController());

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFF0F172A),
      body: SafeArea(
        child: SingleChildScrollView(
          child: Column(
            children: [
              _buildProfileHeader()
                  .animate()
                  .fadeIn(duration: 800.ms)
                  .slideY(begin: -0.3, end: 0),
              Gap(30),
              _buildSettingsSection()
                  .animate()
                  .fadeIn(duration: 800.ms, delay: 200.ms)
                  .slideX(begin: -0.2, end: 0),
              Gap(30),
              _buildLogoutButton()
                  .animate()
                  .fadeIn(duration: 800.ms, delay: 400.ms)
                  .scale(begin: Offset(0.8, 0.8), end: Offset(1.0, 1.0)),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildProfileHeader() {
    return Container(
      margin: EdgeInsets.all(20),
      child: GlassmorphicContainer(
        width: double.infinity,
        height: 200,
        borderRadius: 25,
        blur: 15,
        alignment: Alignment.center,
        border: 2,
        linearGradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Color(0xFF3B82F6).withOpacity(0.2),
            Color(0xFF1D4ED8).withOpacity(0.1),
          ],
        ),
        borderGradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Color(0xFF3B82F6).withOpacity(0.3),
            Color(0xFF1D4ED8).withOpacity(0.1),
          ],
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Stack(
              children: [
                CircleAvatar(
                  radius: 50,
                  backgroundImage:
                  NetworkImage('https://avatar.iran.liara.run/public/42'),
                ),
                Positioned(
                  bottom: 0,
                  right: 0,
                  child: Container(
                    padding: EdgeInsets.all(8),
                    decoration: BoxDecoration(
                      color: Color(0xFF3B82F6),
                      shape: BoxShape.circle,
                      border: Border.all(color: Colors.white, width: 2),
                    ),
                    child: PhosphorIcon(
                      PhosphorIcons.camera(),
                      color: Colors.white,
                      size: 16,
                    ),
                  ),
                ),
              ],
            ),
            Gap(15),
            Text(
              'John Doe',
              style: GoogleFonts.inter(
                color: Colors.white,
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            Gap(5),
            Text(
              'john.doe@example.com',
              style: GoogleFonts.inter(
                color: Colors.white70,
                fontSize: 14,
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildSettingsSection() {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 20),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Settings',
            style: GoogleFonts.inter(
              color: Colors.white,
              fontSize: 20,
              fontWeight: FontWeight.bold,
            ),
          ),
          Gap(20),
          _buildSettingsGroup('Account', [
            _buildSettingsTile(
              'Edit Profile',
              'Update your personal information',
              PhosphorIcons.user(),
              Colors.blue,
              onTap: () {},
            ),
            _buildSettingsTile(
              'Security',
              'Password and authentication',
              PhosphorIcons.shield(),
              Colors.green,
              onTap: () {},
            ),
            _buildSettingsTile(
              'Privacy',
              'Control your privacy settings',
              PhosphorIcons.lock(),
              Colors.orange,
              onTap: () {},
            ),
          ]),
          Gap(25),
          _buildSettingsGroup('App Settings', [
            Obx(() => _buildSettingsTile(
              'Dark Mode',
              'Switch between light and dark theme',
              PhosphorIcons.moon(),
              Colors.purple,
              trailing: Switch.adaptive(
                value: controller.isDarkMode.value,
                onChanged: (value) => controller.toggleDarkMode(),
                activeColor: Color(0xFF8B5CF6),
              ),
            )),
            Obx(() => _buildSettingsTile(
              'Notifications',
              'Manage notification preferences',
              PhosphorIcons.bell(),
              Colors.red,
              trailing: Switch.adaptive(
                value: controller.isNotificationEnabled.value,
                onChanged: (value) => controller.toggleNotifications(),
                activeColor: Color(0xFFEF4444),
              ),
            )),
            _buildSettingsTile(
              'Language',
              controller.selectedLanguage.value,
              PhosphorIcons.translate(),
              Colors.teal,
              onTap: () => _showLanguageDialog(),
            ),
          ]),
          Gap(25),
          _buildSettingsGroup('Support', [
            _buildSettingsTile(
              'Help Center',
              'Get help and support',
              PhosphorIcons.questionMark(),
              Colors.cyan,
              onTap: () {},
            ),
            _buildSettingsTile(
              'Contact Us',
              'Reach out to our support team',
              PhosphorIcons.chatCircle(),
              Colors.pink,
              onTap: () {},
            ),
            _buildSettingsTile(
              'About',
              'App version and information',
              PhosphorIcons.info(),
              Colors.indigo,
              onTap: () {},
            ),
          ]),
        ],
      ),
    );
  }

  Widget _buildSettingsGroup(String title, List<Widget> children) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: GoogleFonts.inter(
            color: Colors.white70,
            fontSize: 16,
            fontWeight: FontWeight.w600,
          ),
        ),
        Gap(15),
        Container(
          decoration: BoxDecoration(
            color: Color(0xFF1E293B).withOpacity(0.5),
            borderRadius: BorderRadius.circular(15),
            border: Border.all(
              color: Colors.white.withOpacity(0.1),
              width: 1,
            ),
          ),
          child: Column(
            children: children.map((child) {
              int index = children.indexOf(child);
              return Column(
                children: [
                  child
                      .animate()
                      .fadeIn(duration: 600.ms, delay: (50 * index).ms)
                      .slideX(begin: -0.1, end: 0),
                  if (index < children.length - 1)
                    Divider(
                      color: Colors.white.withOpacity(0.1),
                      height: 1,
                      indent: 60,
                    ),
                ],
              );
            }).toList(),
          ),
        ),
      ],
    );
  }

  Widget _buildSettingsTile(
      String title,
      String subtitle,
      IconData icon,
      Color iconColor, {
        VoidCallback? onTap,
        Widget? trailing,
      }) {
    return ListTile(
      onTap: onTap,
      leading: Container(
        padding: EdgeInsets.all(10),
        decoration: BoxDecoration(
          color: iconColor.withOpacity(0.2),
          borderRadius: BorderRadius.circular(10),
        ),
        child: PhosphorIcon(
          icon,
          color: iconColor,
          size: 20,
        ),
      ),
      title: Text(
        title,
        style: GoogleFonts.inter(
          color: Colors.white,
          fontSize: 16,
          fontWeight: FontWeight.w600,
        ),
      ),
      subtitle: Text(
        subtitle,
        style: GoogleFonts.inter(
          color: Colors.white60,
          fontSize: 14,
        ),
      ),
      trailing: trailing ??
          PhosphorIcon(
            PhosphorIcons.caretRight(),
            color: Colors.white60,
            size: 16,
          ),
      contentPadding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),
    );
  }

  Widget _buildLogoutButton() {
    return Container(
      margin: EdgeInsets.all(20),
      width: double.infinity,
      child: ElevatedButton(
        onPressed: () {
          _showLogoutDialog();
        },
        style: ElevatedButton.styleFrom(
          backgroundColor: Color(0xFFEF4444),
          foregroundColor: Colors.white,
          padding: EdgeInsets.symmetric(vertical: 16),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15),
          ),
          elevation: 0,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            PhosphorIcon(
              PhosphorIcons.signOut(),
              color: Colors.white,
              size: 20,
            ),
            Gap(10),
            Text(
              'Logout',
              style: GoogleFonts.inter(
                fontSize: 16,
                fontWeight: FontWeight.w600,
              ),
            ),
          ],
        ),
      ),
    );
  }

  void _showLanguageDialog() {
    final languages = ['English', 'Spanish', 'French', 'German', 'Chinese'];

    Get.dialog(
      Dialog(
        backgroundColor: Color(0xFF1E293B),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(20),
        ),
        child: Padding(
          padding: EdgeInsets.all(20),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Select Language',
                style: GoogleFonts.inter(
                  color: Colors.white,
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                ),
              ),
              Gap(20),
              ...languages.map((language) => Obx(() => ListTile(
                onTap: () {
                  controller.changeLanguage(language);
                  Get.back();
                },
                leading: PhosphorIcon(
                  PhosphorIcons.translate(),
                  color: Color(0xFF06B6D4),
                  size: 20,
                ),
                title: Text(
                  language,
                  style: GoogleFonts.inter(
                    color: Colors.white,
                    fontSize: 16,
                  ),
                ),
                trailing: controller.selectedLanguage.value == language
                    ? PhosphorIcon(
                  PhosphorIcons.check(),
                  color: Color(0xFF10B981),
                  size: 20,
                )
                    : null,
                contentPadding: EdgeInsets.zero,
              ))).toList(),
            ],
          ),
        ),
      )
          .animate()
          .fadeIn(duration: 300.ms)
          .scale(begin: Offset(0.8, 0.8), end: Offset(1.0, 1.0)),
    );
  }

  void _showLogoutDialog() {
    Get.dialog(
      Dialog(
        backgroundColor: Color(0xFF1E293B),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(20),
        ),
        child: Padding(
          padding: EdgeInsets.all(25),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Container(
                padding: EdgeInsets.all(15),
                decoration: BoxDecoration(
                  color: Color(0xFFEF4444).withOpacity(0.2),
                  shape: BoxShape.circle,
                ),
                child: PhosphorIcon(
                  PhosphorIcons.signOut(),
                  color: Color(0xFFEF4444),
                  size: 30,
                ),
              ),
              Gap(20),
              Text(
                'Logout',
                style: GoogleFonts.inter(
                  color: Colors.white,
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                ),
              ),
              Gap(10),
              Text(
                'Are you sure you want to logout?',
                style: GoogleFonts.inter(
                  color: Colors.white70,
                  fontSize: 16,
                ),
                textAlign: TextAlign.center,
              ),
              Gap(25),
              Row(
                children: [
                  Expanded(
                    child: TextButton(
                      onPressed: () => Get.back(),
                      style: TextButton.styleFrom(
                        padding: EdgeInsets.symmetric(vertical: 12),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(10),
                          side: BorderSide(color: Colors.white30),
                        ),
                      ),
                      child: Text(
                        'Cancel',
                        style: GoogleFonts.inter(
                          color: Colors.white,
                          fontSize: 16,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ),
                  ),
                  Gap(15),
                  Expanded(
                    child: ElevatedButton(
                      onPressed: () {
                        Get.back();
                      },
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Color(0xFFEF4444),
                        padding: EdgeInsets.symmetric(vertical: 12),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                        elevation: 0,
                      ),
                      child: Text(
                        'Logout',
                        style: GoogleFonts.inter(
                          color: Colors.white,
                          fontSize: 16,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ],
          ),
        ),
      )
          .animate()
          .fadeIn(duration: 300.ms)
          .scale(begin: Offset(0.8, 0.8), end: Offset(1.0, 1.0)),
    );
  }
}

// Main App Setup
void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return ScreenUtilInit(
      designSize: Size(375, 812),
      minTextAdapt: true,
      splitScreenMode: true,
      builder: (context, child) {
        return GetMaterialApp(
          title: 'Modern Flutter App',
          debugShowCheckedModeBanner: false,
          theme: ThemeData(
            primarySwatch: Colors.blue,
            useMaterial3: true,
          ),
          home: MainNavigationView(),
          getPages: [
            GetPage(name: '/dashboard', page: () => DashboardView()),
            GetPage(name: '/products', page: () => ProductsView()),
            GetPage(name: '/profile', page: () => ProfileView()),
          ],
        );
      },
    );
  }
}

class MainNavigationView extends StatefulWidget {
  @override
  _MainNavigationViewState createState() => _MainNavigationViewState();
}

class _MainNavigationViewState extends State<MainNavigationView> {
  int _currentIndex = 0;

  final List<Widget> _pages = [
    DashboardView(),
    ProductsView(),
    ProfileView(),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: IndexedStack(
        index: _currentIndex,
        children: _pages,
      ),
      bottomNavigationBar: Container(
        decoration: BoxDecoration(
          color: Colors.white,
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.1),
              blurRadius: 20,
              offset: Offset(0, -5),
            ),
          ],
        ),
        child: BottomNavigationBar(
          currentIndex: _currentIndex,
          onTap: (index) {
            setState(() {
              _currentIndex = index;
            });
          },
          type: BottomNavigationBarType.fixed,
          backgroundColor: Colors.transparent,
          elevation: 0,
          selectedItemColor: Color(0xFF6366F1),
          unselectedItemColor: Color(0xFF94A3B8),
          selectedLabelStyle: GoogleFonts.inter(
            fontSize: 12,
            fontWeight: FontWeight.w600,
          ),
          unselectedLabelStyle: GoogleFonts.inter(
            fontSize: 12,
            fontWeight: FontWeight.w500,
          ),
          items: [
            BottomNavigationBarItem(
              icon: PhosphorIcon(PhosphorIcons.house()),
              activeIcon: PhosphorIcon(PhosphorIcons.house(PhosphorIconsStyle.fill)),
              label: 'Dashboard',
            ),
            BottomNavigationBarItem(
              icon: PhosphorIcon(PhosphorIcons.package()),
              activeIcon: PhosphorIcon(PhosphorIcons.package(PhosphorIconsStyle.fill)),
              label: 'Products',
            ),
            BottomNavigationBarItem(
              icon: PhosphorIcon(PhosphorIcons.user()),
              activeIcon: PhosphorIcon(PhosphorIcons.user(PhosphorIconsStyle.fill)),
              label: 'Profile',
            ),
          ],
        ),
      ),
    );
  }
}
